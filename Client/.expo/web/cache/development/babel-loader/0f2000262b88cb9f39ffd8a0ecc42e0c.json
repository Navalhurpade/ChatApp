{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nvar _jsxFileName = \"/mnt/Softwers And games/Android Development/chatApp/Client/app/screens/HomeScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { removeToken } from \"../api/Authstorage\";\nimport { waitForNewUser, getLetestData, notifyUserJoined } from \"../api/httpService\";\nimport AppButton from \"../components/AppButton\";\nimport AuthContext from \"../components/AuthContext\";\nimport Screen from \"../components/Screen\";\nimport Color from \"../config/colors\";\nimport UserCard from \"./../components/UserCard\";\n\nfunction HomeScreen(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMasseges = _useState2[1];\n\n  var context = useContext(AuthContext);\n  useEffect(function () {\n    var isMounted = true;\n    waitForNewUser(function (newUser) {\n      var note = newUser + \" joined the chat !\";\n      var messageId = \"sdfhasddsg472945605\";\n      var allnewUsers = [].concat(_toConsumableArray(messages), [{\n        isNote: true,\n        note: note,\n        _id: messageId\n      }]);\n      if (isMounted) setMasseges(allnewUsers);\n    });\n    getLetestData(function (data) {\n      if (isMounted) context.setUser(data);\n    });\n    return function () {\n      isMounted = false;\n    };\n  });\n  notifyUserJoined(context.user);\n  console.log(\"User on home screen\\n\", context.user);\n  return React.createElement(Screen, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(AppButton, {\n    title: \"logout\",\n    onPress: function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(removeToken(\"x-auth-key\"));\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: \"flex-end\",\n    backgroundColor: \"#fff\",\n    flex: 1\n  },\n  userContainer: {\n    padding: 5,\n    backgroundColor: Color.lightGray,\n    alignItems: \"center\"\n  },\n  newUser: {\n    color: Color.black\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["/mnt/Softwers And games/Android Development/chatApp/Client/app/screens/HomeScreen.js"],"names":["React","useContext","useEffect","useState","removeToken","waitForNewUser","getLetestData","notifyUserJoined","AppButton","AuthContext","Screen","Color","UserCard","HomeScreen","messages","setMasseges","context","isMounted","newUser","note","messageId","allnewUsers","isNote","_id","data","setUser","user","console","log","styles","container","StyleSheet","create","justifyContent","backgroundColor","flex","userContainer","padding","lightGray","alignItems","color","black"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;;AAEA,SAASC,WAAT;AACA,SACEC,cADF,EAEEC,aAFF,EAGEC,gBAHF;AAKA,OAAOC,SAAP;AACA,OAAOC,WAAP;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;;AAEA,SAASC,UAAT,OAAwB;AAAA;;AAAA,kBACUV,QAAQ,CAAC,EAAD,CADlB;AAAA;AAAA,MACfW,QADe;AAAA,MACLC,WADK;;AAEtB,MAAMC,OAAO,GAAGf,UAAU,CAACQ,WAAD,CAA1B;AAEAP,EAAAA,SAAS,CAAC,YAAM;AAEd,QAAIe,SAAS,GAAG,IAAhB;AAGAZ,IAAAA,cAAc,CAAC,UAACa,OAAD,EAAa;AAC1B,UAAMC,IAAI,GAAMD,OAAN,uBAAV;AACA,UAAME,SAAS,GAAG,qBAAlB;AAEA,UAAMC,WAAW,gCACZP,QADY,IAEf;AAAEQ,QAAAA,MAAM,EAAE,IAAV;AAAgBH,QAAAA,IAAI,EAAEA,IAAtB;AAA4BI,QAAAA,GAAG,EAAEH;AAAjC,OAFe,EAAjB;AAIA,UAAIH,SAAJ,EAAeF,WAAW,CAACM,WAAD,CAAX;AAChB,KATa,CAAd;AAWAf,IAAAA,aAAa,CAAC,UAACkB,IAAD,EAAU;AACtB,UAAIP,SAAJ,EAAeD,OAAO,CAACS,OAAR,CAAgBD,IAAhB;AAChB,KAFY,CAAb;AAKA,WAAO,YAAM;AACXP,MAAAA,SAAS,GAAG,KAAZ;AACD,KAFD;AAGD,GAxBQ,CAAT;AA0BAV,EAAAA,gBAAgB,CAACS,OAAO,CAACU,IAAT,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCZ,OAAO,CAACU,IAA7C;AAEA,SACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEG,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAkB1B,WAAW,CAAC,YAAD,CAA7B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAWD;;AAED,IAAMyB,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,cAAc,EAAE,UADP;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,IAAI,EAAE;AAHG,GADoB;AAM/BC,EAAAA,aAAa,EAAE;AACbC,IAAAA,OAAO,EAAE,CADI;AAEbH,IAAAA,eAAe,EAAEvB,KAAK,CAAC2B,SAFV;AAGbC,IAAAA,UAAU,EAAE;AAHC,GANgB;AAW/BrB,EAAAA,OAAO,EAAE;AACPsB,IAAAA,KAAK,EAAE7B,KAAK,CAAC8B;AADN;AAXsB,CAAlB,CAAf;AAgBA,eAAe5B,UAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { removeToken } from \"../api/Authstorage\";\nimport {\n  waitForNewUser,\n  getLetestData,\n  notifyUserJoined,\n} from \"../api/httpService\";\nimport AppButton from \"../components/AppButton\";\nimport AuthContext from \"../components/AuthContext\";\nimport Screen from \"../components/Screen\";\nimport Color from \"../config/colors\";\nimport UserCard from \"./../components/UserCard\";\n\nfunction HomeScreen({}) {\n  const [messages, setMasseges] = useState([]);\n  const context = useContext(AuthContext);\n\n  useEffect(() => {\n    //if Component is mounted\n    let isMounted = true;\n\n    //and wait for new Users\n    waitForNewUser((newUser) => {\n      const note = `${newUser} joined the chat !`;\n      const messageId = \"sdfhasddsg472945605\";\n\n      const allnewUsers = [\n        ...messages,\n        { isNote: true, note: note, _id: messageId },\n      ];\n      if (isMounted) setMasseges(allnewUsers);\n    });\n\n    getLetestData((data) => {\n      if (isMounted) context.setUser(data);\n    });\n\n    //Cleaning up memmory if Copomponent is unmounted !\n    return () => {\n      isMounted = false;\n    };\n  });\n\n  notifyUserJoined(context.user);\n  console.log(\"User on home screen\\n\", context.user);\n\n  return (\n    <Screen style={styles.container}>\n      {/* {usersData.freinds.map((usr) => (\n        <UserCard />\n      ))} */}\n      <AppButton\n        title=\"logout\"\n        onPress={async () => await removeToken(\"x-auth-key\")}\n      />\n    </Screen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: \"flex-end\",\n    backgroundColor: \"#fff\",\n    flex: 1,\n  },\n  userContainer: {\n    padding: 5,\n    backgroundColor: Color.lightGray,\n    alignItems: \"center\",\n  },\n  newUser: {\n    color: Color.black,\n  },\n});\n\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}