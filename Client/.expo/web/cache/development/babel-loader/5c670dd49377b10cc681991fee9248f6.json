{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nvar _jsxFileName = \"/mnt/Softwers And games/Android Development/chatApp/Client/app/screens/RegisterScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as yup from \"yup\";\nimport Screen from \"../components/Screen\";\nimport { Form, FormFeed, SubmitButon } from \"../components/Forms\";\nimport http from \"../api/http\";\nvar validationSchema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().email().required(),\n  phoneNo: yup.string().required().matches(/^[0-9]+$/, \"Phone number must be only digits\").min(10, \"Phone Number must be 10 digits\").max(10, \"Phone Number must be 10 digits\"),\n  password: yup.string().min(5).required(),\n  ConfirmPassword: yup.string().oneOf([yup.ref(\"password\")], \"Passwords does not match\")\n});\n\nvar handleRegistration = function handleRegistration(usersDetails) {\n  var _await$http$post, data;\n\n  return _regeneratorRuntime.async(function handleRegistration$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          delete usersDetails.ConfirmPassword;\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(http.post(\"/auth/register\", usersDetails));\n\n        case 4:\n          _await$http$post = _context.sent;\n          data = _await$http$post.data;\n\n          if (!data) {\n            _context.next = 13;\n            break;\n          }\n\n          if (!data.error) {\n            _context.next = 11;\n            break;\n          }\n\n          console.log(data.error);\n          Alert.alert(\"Error\", data.error);\n          return _context.abrupt(\"return\");\n\n        case 11:\n          console.log(\"\\nRegister Success ! \", data);\n          Alert.alert(\"Congrats\", \"Registration sucessfull !\");\n\n        case 13:\n          _context.next = 18;\n          break;\n\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(\"Error !\", _context.t0);\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 15]], Promise);\n};\n\nfunction RegisterScreen(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  return React.createElement(Screen, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Register To WeChat\"), React.createElement(Form, {\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      phoneNo: \"\",\n      password: \"\",\n      ConfirmPassword: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: handleRegistration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(FormFeed, {\n    placeholder: \"Name\",\n    name: \"name\",\n    width: \"70%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), React.createElement(FormFeed, {\n    name: \"email\",\n    placeholder: \"Email\",\n    keyboardType: \"email-address\",\n    width: \"85%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), React.createElement(FormFeed, {\n    name: \"phoneNo\",\n    placeholder: \"Phone\",\n    keyboardType: \"number-pad\",\n    width: \"60%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), React.createElement(FormFeed, {\n    name: \"password\",\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    width: \"75%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), React.createElement(FormFeed, {\n    name: \"ConfirmPassword\",\n    placeholder: \"Conform Password\",\n    secureTextEntry: true,\n    width: \"75%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), React.createElement(SubmitButon, {\n    title: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 5\n  },\n  heading: {\n    fontSize: 50,\n    fontWeight: \"400\"\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"sources":["/mnt/Softwers And games/Android Development/chatApp/Client/app/screens/RegisterScreen.js"],"names":["React","yup","Screen","Form","FormFeed","SubmitButon","http","validationSchema","object","shape","name","string","required","email","phoneNo","matches","min","max","password","ConfirmPassword","oneOf","ref","handleRegistration","usersDetails","post","data","error","console","log","Alert","alert","RegisterScreen","styles","container","heading","StyleSheet","create","paddingHorizontal","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Alert, Text } from \"react-native\";\nimport * as yup from \"yup\";\n\nimport Screen from \"../components/Screen\";\nimport { Form, FormFeed, SubmitButon } from \"../components/Forms\";\nimport http from \"../api/http\";\n\nconst validationSchema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().email().required(),\n  phoneNo: yup\n    .string()\n    .required()\n    .matches(/^[0-9]+$/, \"Phone number must be only digits\")\n    .min(10, \"Phone Number must be 10 digits\")\n    .max(10, \"Phone Number must be 10 digits\"),\n  password: yup.string().min(5).required(),\n  ConfirmPassword: yup\n    .string()\n    .oneOf([yup.ref(\"password\")], \"Passwords does not match\"),\n});\n\nconst handleRegistration = async (usersDetails) => {\n  delete usersDetails.ConfirmPassword;\n\n  try {\n    const { data } = await http.post(\"/auth/register\", usersDetails);\n    if (data) {\n      if (data.error) {\n        console.log(data.error);\n        Alert.alert(\"Error\", data.error);\n        return;\n      }\n      console.log(\"\\nRegister Success ! \", data);\n      Alert.alert(\"Congrats\", \"Registration sucessfull !\");\n    }\n  } catch (error) {\n    console.log(\"Error !\", error);\n  }\n};\nfunction RegisterScreen({}) {\n  return (\n    <Screen style={styles.container}>\n      <Text style={styles.heading}>Register To WeChat</Text>\n      <Form\n        initialValues={{\n          name: \"\",\n          email: \"\",\n          phoneNo: \"\",\n          password: \"\",\n          ConfirmPassword: \"\",\n        }}\n        validationSchema={validationSchema}\n        onSubmit={handleRegistration}\n      >\n        <FormFeed placeholder=\"Name\" name=\"name\" width=\"70%\" />\n        <FormFeed\n          name=\"email\"\n          placeholder=\"Email\"\n          keyboardType=\"email-address\"\n          width=\"85%\"\n        />\n        <FormFeed\n          name=\"phoneNo\"\n          placeholder=\"Phone\"\n          keyboardType=\"number-pad\"\n          width=\"60%\"\n        />\n        <FormFeed\n          name=\"password\"\n          placeholder=\"Password\"\n          secureTextEntry\n          width=\"75%\"\n        />\n        <FormFeed\n          name=\"ConfirmPassword\"\n          placeholder=\"Conform Password\"\n          secureTextEntry\n          width=\"75%\"\n        />\n        <SubmitButon title=\"Register\" />\n      </Form>\n    </Screen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 5,\n  },\n  heading: {\n    fontSize: 50,\n    fontWeight: \"400\",\n  },\n});\n\nexport default RegisterScreen;\n"]},"metadata":{},"sourceType":"module"}