{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nvar _jsxFileName = \"/mnt/Softwers And games/Android Development/chatApp/Client/app/screens/HomeScreen.js\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { connect } from \"../api/httpService\";\nimport MessegeCard from \"../components/MessegeCard\";\n\nfunction HomeScreen(_ref) {\n  var _this = this;\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      mesInput = _useState2[0],\n      setMessageInput = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMasseges = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      user = _useState6[0],\n      setUser = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dilog = _useState8[0],\n      setdilog = _useState8[1];\n\n  useEffect(function () {\n    promptName();\n    connect(user);\n  }, []);\n\n  var promptName = function promptName() {\n    alert(\"alerat\");\n    Alert.prompt(\"Enter Nickname\", \"Enter your to join the chat\", [{\n      text: \"OK\",\n      onPress: function onPress(name) {\n        return setUser(name);\n      }\n    }]);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, messages.map(function (mesege) {\n    return React.createElement(MessegeCard, {\n      mes: mesege,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    });\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), dilog && React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    value: user,\n    onChangeText: setUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    title: \"prompt\",\n    onPress: function onPress() {\n      return setdilog(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  })), React.createElement(TextInput, {\n    underlineColorAndroid: \"black\",\n    value: mesInput,\n    onChangeText: setMessageInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#f3f3\",\n    flex: 1,\n    flexDirection: \"column-reverse\"\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["/mnt/Softwers And games/Android Development/chatApp/Client/app/screens/HomeScreen.js"],"names":["React","useEffect","useState","connect","MessegeCard","HomeScreen","mesInput","setMessageInput","messages","setMasseges","user","setUser","dilog","setdilog","promptName","alert","Alert","prompt","text","onPress","name","styles","container","map","mesege","StyleSheet","create","backgroundColor","flex","flexDirection"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAEA,SAASC,OAAT;AACA,OAAOC,WAAP;;AAEA,SAASC,UAAT,OAAwB;AAAA;;AAAA;;AAAA,kBACcH,QAAQ,CAAC,EAAD,CADtB;AAAA;AAAA,MACfI,QADe;AAAA,MACLC,eADK;;AAAA,mBAEUL,QAAQ,CAAC,EAAD,CAFlB;AAAA;AAAA,MAEfM,QAFe;AAAA,MAELC,WAFK;;AAAA,mBAGEP,QAAQ,CAAC,EAAD,CAHV;AAAA;AAAA,MAGfQ,IAHe;AAAA,MAGTC,OAHS;;AAAA,mBAIIT,QAAQ,CAAC,IAAD,CAJZ;AAAA;AAAA,MAIfU,KAJe;AAAA,MAIRC,QAJQ;;AAMtBZ,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,UAAU;AACVX,IAAAA,OAAO,CAACO,IAAD,CAAP;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAMI,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBC,IAAAA,KAAK,CAAC,QAAD,CAAL;AACAC,IAAAA,KAAK,CAACC,MAAN,CAAa,gBAAb,EAA+B,6BAA/B,EAA8D,CAC5D;AACEC,MAAAA,IAAI,EAAE,IADR;AAEEC,MAAAA,OAAO,EAAE,iBAACC,IAAD;AAAA,eAAUT,OAAO,CAACS,IAAD,CAAjB;AAAA;AAFX,KAD4D,CAA9D;AAMD,GARD;;AAUA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,QAAQ,CAACe,GAAT,CAAa,UAACC,MAAD;AAAA,WACZ,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADY;AAAA,GAAb,CADH,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKGZ,KAAK,IACJ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEF,IAAlB;AAAwB,IAAA,YAAY,EAAEC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAE;AAAA,aAAME,QAAQ,CAAC,KAAD,CAAd;AAAA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANJ,EAWE,oBAAC,SAAD;AACE,IAAA,qBAAqB,EAAC,OADxB;AAEE,IAAA,KAAK,EAAEP,QAFT;AAGE,IAAA,YAAY,EAAEC,eAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAmBD;;AAED,IAAMc,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,eAAe,EAAE,OADR;AAETC,IAAAA,IAAI,EAAE,CAFG;AAGTC,IAAAA,aAAa,EAAE;AAHN;AADoB,CAAlB,CAAf;AAQA,eAAexB,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, StyleSheet, Text, TextInput, Alert, Button } from \"react-native\";\nimport { connect } from \"../api/httpService\";\nimport MessegeCard from \"../components/MessegeCard\";\n\nfunction HomeScreen({}) {\n  const [mesInput, setMessageInput] = useState(\"\");\n  const [messages, setMasseges] = useState([]);\n  const [user, setUser] = useState(\"\");\n  const [dilog, setdilog] = useState(true);\n\n  useEffect(() => {\n    promptName();\n    connect(user);\n  }, []);\n\n  const promptName = () => {\n    alert(\"alerat\");\n    Alert.prompt(\"Enter Nickname\", \"Enter your to join the chat\", [\n      {\n        text: \"OK\",\n        onPress: (name) => setUser(name),\n      },\n    ]);\n  };\n\n  return (\n    <View style={styles.container}>\n      {messages.map((mesege) => (\n        <MessegeCard mes={mesege} />\n      ))}\n      <Text></Text>\n      {dilog && (\n        <View>\n          <TextInput value={user} onChangeText={setUser} />\n          <Button title=\"prompt\" onPress={() => setdilog(false)} />\n        </View>\n      )}\n      <TextInput\n        underlineColorAndroid=\"black\"\n        value={mesInput}\n        onChangeText={setMessageInput}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#f3f3\",\n    flex: 1,\n    flexDirection: \"column-reverse\",\n  },\n});\n\nexport default HomeScreen;\n"]},"metadata":{},"sourceType":"module"}