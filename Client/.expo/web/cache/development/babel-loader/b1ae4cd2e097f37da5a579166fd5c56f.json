{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/mnt/Softwers And games/Android Development/chatApp/Client/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport AppNavigator from \"./app/navigation/AppNavigator\";\nimport { isUserLogedin } from \"./app/api/Authstorage\";\nimport AuthContext from \"./app/components/AuthContext\";\nimport AuthNavigator from \"./app/navigation/AuthNavigator\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var restoretoken = function restoretoken() {\n    var foundUser;\n    return _regeneratorRuntime.async(function restoretoken$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(isUserLogedin());\n\n          case 2:\n            foundUser = _context.sent;\n\n            if (foundUser) {\n              console.log(\"Updating user !\");\n              setUser(foundUser);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    restoretoken();\n  }, []);\n  console.log(\"curent user in root is \\n\", user);\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      user: user,\n      setUser: setUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, user ? React.createElement(AppNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }) : React.createElement(AuthNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 36\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/mnt/Softwers And games/Android Development/chatApp/Client/App.js"],"names":["React","useState","useEffect","NavigationContainer","AppNavigator","isUserLogedin","AuthContext","AuthNavigator","App","user","setUser","restoretoken","foundUser","console","log","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,YAAP;AACA,SAASC,aAAT;AACA,OAAOC,WAAP;AACA,OAAOC,aAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACJP,QAAQ,EADJ;AAAA;AAAA,MACrBQ,IADqB;AAAA,MACfC,OADe;;AAG5B,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACKN,aAAa,EADlB;;AAAA;AACbO,YAAAA,SADa;;AAEnB,gBAAIA,SAAJ,EAAe;AACbC,cAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAJ,cAAAA,OAAO,CAACE,SAAD,CAAP;AACD;;AALkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAQAV,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIAE,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCL,IAAzC;AACA,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEA,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,OAAO,EAAPA;AAAR,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,GAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAsB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD7B,CADF,CADF;AAOD;AAED,IAAMM,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport AppNavigator from \"./app/navigation/AppNavigator\";\nimport { isUserLogedin } from \"./app/api/Authstorage\";\nimport AuthContext from \"./app/components/AuthContext\";\nimport AuthNavigator from \"./app/navigation/AuthNavigator\";\n\nexport default function App() {\n  const [user, setUser] = useState();\n\n  const restoretoken = async () => {\n    const foundUser = await isUserLogedin();\n    if (foundUser) {\n      console.log(\"Updating user !\");\n      setUser(foundUser);\n    }\n  };\n\n  useEffect(() => {\n    restoretoken();\n  }, []);\n\n  console.log(\"curent user in root is \\n\", user);\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <NavigationContainer>\n        {user ? <AppNavigator /> : <AuthNavigator />}\n      </NavigationContainer>\n    </AuthContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}