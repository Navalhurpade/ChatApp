{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as SecureStore from \"expo-secure-store\";\nimport jwtDecode from \"jwt-decode\";\nvar xAuthToken = \"x-auth-token\";\nexport var storeToken = function storeToken(value) {\n  return _regeneratorRuntime.async(function storeToken$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(SecureStore.setItemAsync(xAuthToken, value));\n\n        case 3:\n          console.log(\"\\nStoring Token !\");\n          _context.next = 10;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"got \" + value + \" for storing !\");\n          console.log(\"Error while storing this token\", _context.t0);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\nexport var getToken = function getToken(key) {\n  var value;\n  return _regeneratorRuntime.async(function getToken$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(SecureStore.getItemAsync(key));\n\n        case 3:\n          value = _context2.sent;\n\n          if (!value) {\n            _context2.next = 6;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", value);\n\n        case 6:\n          console.log(\"No Value Found For \" + key);\n          return _context2.abrupt(\"return\");\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(\"error while geting token\", _context2.t0);\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n};\nexport var removeToken = function removeToken(key) {\n  return _regeneratorRuntime.async(function removeToken$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(SecureStore.deleteItemAsync(key));\n\n        case 3:\n          console.log(\"token removed !\");\n          _context3.next = 9;\n          break;\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(\"error while removing token \" + key);\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\nexport var isUserLogedin = function isUserLogedin() {\n  var token, userdata;\n  return _regeneratorRuntime.async(function isUserLogedin$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(getToken(xAuthToken));\n\n        case 3:\n          token = _context4.sent;\n\n          if (!token) {\n            _context4.next = 8;\n            break;\n          }\n\n          userdata = jwtDecode(token);\n          console.log(\"found user !\", userdata);\n          return _context4.abrupt(\"return\", userdata);\n\n        case 8:\n          console.log(\"No user found !\");\n          return _context4.abrupt(\"return\", null);\n\n        case 12:\n          _context4.prev = 12;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(\"isUserloging feiled !\\n\", _context4.t0);\n\n        case 15:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 12]], Promise);\n};","map":{"version":3,"sources":["/mnt/Softwers And games/Android Development/chatApp/Client/app/api/Authstorage.js"],"names":["SecureStore","jwtDecode","xAuthToken","storeToken","value","setItemAsync","console","log","getToken","key","getItemAsync","removeToken","deleteItemAsync","isUserLogedin","token","userdata"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,mBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,UAAU,GAAG,cAAnB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEhBJ,WAAW,CAACK,YAAZ,CAAyBH,UAAzB,EAAqCE,KAArC,CAFgB;;AAAA;AAGtBE,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAHsB;AAAA;;AAAA;AAAA;AAAA;AAKtBD,UAAAA,OAAO,CAACC,GAAR,CAAY,SAASH,KAAT,GAAiB,gBAA7B;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;;AANsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAUP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEAT,WAAW,CAACU,YAAZ,CAAyBD,GAAzB,CAFA;;AAAA;AAEdL,UAAAA,KAFc;;AAAA,eAGhBA,KAHgB;AAAA;AAAA;AAAA;;AAAA,4CAGFA,KAHE;;AAAA;AAIpBE,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBE,GAApC;AAJoB;;AAAA;AAAA;AAAA;AAOpBH,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;;AAPoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AAWP,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAAOF,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEjBT,WAAW,CAACY,eAAZ,CAA4BH,GAA5B,CAFiB;;AAAA;AAGvBH,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAHuB;AAAA;;AAAA;AAAA;AAAA;AAKvBD,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAgCE,GAA5C;;AALuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AASP,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAELL,QAAQ,CAACN,UAAD,CAFH;;AAAA;AAEnBY,UAAAA,KAFmB;;AAAA,eAGrBA,KAHqB;AAAA;AAAA;AAAA;;AAIjBC,UAAAA,QAJiB,GAINd,SAAS,CAACa,KAAD,CAJH;AAKvBR,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BQ,QAA5B;AALuB,4CAMhBA,QANgB;;AAAA;AAQzBT,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AARyB,4CASlB,IATkB;;AAAA;AAAA;AAAA;AAWzBD,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;;AAXyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB","sourcesContent":["import * as SecureStore from \"expo-secure-store\";\nimport jwtDecode from \"jwt-decode\";\n\nconst xAuthToken = \"x-auth-token\";\n\nexport const storeToken = async (value) => {\n  try {\n    await SecureStore.setItemAsync(xAuthToken, value);\n    console.log(\"\\nStoring Token !\");\n  } catch (error) {\n    console.log(\"got \" + value + \" for storing !\");\n    console.log(\"Error while storing this token\", error);\n  }\n};\n\nexport const getToken = async (key) => {\n  try {\n    const value = await SecureStore.getItemAsync(key);\n    if (value) return value;\n    console.log(\"No Value Found For \" + key);\n    return;\n  } catch (error) {\n    console.log(\"error while geting token\", error);\n  }\n};\n\nexport const removeToken = async (key) => {\n  try {\n    await SecureStore.deleteItemAsync(key);\n    console.log(\"token removed !\");\n  } catch (error) {\n    console.log(\"error while removing token \" + key);\n  }\n};\n\nexport const isUserLogedin = async () => {\n  try {\n    const token = await getToken(xAuthToken);\n    if (token) {\n      const userdata = jwtDecode(token);\n      console.log(\"found user !\", userdata);\n      return userdata;\n    }\n    console.log(\"No user found !\");\n    return null;\n  } catch (error) {\n    console.log(\"isUserloging feiled !\\n\", error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}