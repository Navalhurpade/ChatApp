{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nvar _jsxFileName = \"/mnt/Softwers And games/Android Development/chatApp/Client/app/screens/LoginScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Form, FormFeed, SubmitButon } from \"../components/Forms\";\nimport Screen from \"../components/Screen\";\nimport http from \"../api/http\";\nimport * as yup from \"yup\";\nimport { storeToken } from \"../api/Authstorage\";\nimport AuthContext from \"../components/AuthContext\";\nimport jwtDecode from \"jwt-decode\";\nvar validationSchema = yup.object().shape({\n  username: yup.string().required(),\n  password: yup.string().required()\n});\n\nfunction LoginScreen(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var context = useContext(AuthContext);\n\n  var handleLogin = function handleLogin(UserDetails) {\n    var _await$http$post, data, usersData;\n\n    return _regeneratorRuntime.async(function handleLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(http.post(\"/auth\", {\n              email: UserDetails.username,\n              password: UserDetails.password\n            }));\n\n          case 3:\n            _await$http$post = _context.sent;\n            data = _await$http$post.data;\n\n            if (!data.error) {\n              _context.next = 8;\n              break;\n            }\n\n            Alert.alert(\"Error\", data.error);\n            return _context.abrupt(\"return\");\n\n          case 8:\n            console.log(\"Sending    \", data);\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(storeToken(data));\n\n          case 11:\n            usersData = jwtDecode(data);\n            context.setUser(usersData);\n            console.log(\"seting user to\\n\", usersData);\n            console.log(\"now user is \", context.user);\n            _context.next = 20;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"Error while loging user\", _context.t0);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 17]], Promise);\n  };\n\n  return React.createElement(Screen, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Login to WeChat\"), React.createElement(Form, {\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(FormFeed, {\n    name: \"username\",\n    placeholder: \"Email or Phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), React.createElement(FormFeed, {\n    name: \"password\",\n    placeholder: \"password\",\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), React.createElement(SubmitButon, {\n    title: \"Lets begin !\",\n    onPress: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 10\n  },\n  heading: {\n    fontSize: 40,\n    fontWeight: \"400\"\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["/mnt/Softwers And games/Android Development/chatApp/Client/app/screens/LoginScreen.js"],"names":["React","useContext","Form","FormFeed","SubmitButon","Screen","http","yup","storeToken","AuthContext","jwtDecode","validationSchema","object","shape","username","string","required","password","LoginScreen","context","handleLogin","UserDetails","post","email","data","error","Alert","alert","console","log","usersData","setUser","user","styles","container","heading","StyleSheet","create","paddingHorizontal","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { StyleSheet, Text, Alert } from \"react-native\";\n\nimport { Form, FormFeed, SubmitButon } from \"../components/Forms\";\nimport Screen from \"../components/Screen\";\nimport http from \"../api/http\";\nimport * as yup from \"yup\";\nimport { storeToken } from \"../api/Authstorage\";\nimport AuthContext from \"../components/AuthContext\";\nimport jwtDecode from \"jwt-decode\";\n\nconst validationSchema = yup.object().shape({\n  username: yup.string().required(),\n  password: yup.string().required(),\n});\n\nfunction LoginScreen({}) {\n  const context = useContext(AuthContext);\n\n  const handleLogin = async (UserDetails) => {\n    try {\n      const { data } = await http.post(\"/auth\", {\n        email: UserDetails.username,\n        password: UserDetails.password,\n      });\n      if (data.error) {\n        Alert.alert(\"Error\", data.error);\n        return;\n      }\n      console.log(\"Sending    \", data);\n      await storeToken(data);\n\n      const usersData = jwtDecode(data);\n\n      context.setUser(usersData);\n      console.log(\"seting user to\\n\", usersData);\n      console.log(\"now user is \", context.user);\n    } catch (error) {\n      console.log(\"Error while loging user\", error);\n    }\n  };\n\n  return (\n    <Screen style={styles.container}>\n      <Text style={styles.heading}>Login to WeChat</Text>\n      <Form\n        initialValues={{ username: \"\", password: \"\" }}\n        validationSchema={validationSchema}\n        onSubmit={handleLogin}\n      >\n        <FormFeed name=\"username\" placeholder=\"Email or Phone\" />\n        <FormFeed name=\"password\" placeholder=\"password\" secureTextEntry />\n        <SubmitButon title=\"Lets begin !\" onPress={handleLogin} />\n      </Form>\n    </Screen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 10,\n  },\n  heading: {\n    fontSize: 40,\n    fontWeight: \"400\",\n  },\n});\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}